// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"addr","type":"address"},{"name":"caddr","type":"address"}],"name":"bootstrapsAccount","outputs":[{"name":"res","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"},{"name":"numberofcoins","type":"uint256"},{"name":"fireAddr","type":"address"}],"name":"depositFireCoins","outputs":[{"name":"done","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"dollarBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"},{"name":"numberOfcoins","type":"uint256"},{"name":"fireAddr","type":"address"}],"name":"getFireCoins","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"ethBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"DollarBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260038054600160a060020a031916331790819055600160a060020a031660009081526001602052604090203490556102b5806100406000396000f3606060405236156100565760e060020a600035046301150506811461005857806331c00f38146100bc5780634021581a14610123578063b3ab5e9b1461013b578063d8f3790f146101ce578063fa88ef65146101e6575b005b61020260043560243560e060020a63f8b2cb4f026060908152600160a060020a03808416606452600091839182169063f8b2cb4f9060849060209060248188876161da5a03f115610002575050604051516002819055831415905061021457610234565b61020260043560243560443560e060020a63f8b2cb4f026060908152600160a060020a03808516606452600091839185919083169063f8b2cb4f9060849060209060248189876161da5a03f115610002575050604051519190911015905061023b576101c6565b61020260043560006020819052908152604090205481565b6102026004356024356044357fb7fde9da000000000000000000000000000000000000000000000000000000006060908152600160a060020a038085166064526084849052600091839182169063b7fde9da9060a490859060448183876161da5a03f11561000257505050600160a060020a0385168252602082905260408220805460058604900390555b509392505050565b61020260043560016020526000908152604090205481565b600160a060020a03600435166000908152602081905260409020545b60408051918252519081900360200190f35b600160a060020a0384168252602082905260409091206101f49055506001815b5092915050565b80600160a060020a031663366d4a3386866040518360e060020a0281526004018083600160a060020a03168152602001828152602001925050506020604051808303816000876161da5a03f11561000257505050600160a060020a038516825260208290526040822080546005860401905550939250505056",
    unlinked_binary: "606060405260038054600160a060020a031916331790819055600160a060020a031660009081526001602052604090203490556102b5806100406000396000f3606060405236156100565760e060020a600035046301150506811461005857806331c00f38146100bc5780634021581a14610123578063b3ab5e9b1461013b578063d8f3790f146101ce578063fa88ef65146101e6575b005b61020260043560243560e060020a63f8b2cb4f026060908152600160a060020a03808416606452600091839182169063f8b2cb4f9060849060209060248188876161da5a03f115610002575050604051516002819055831415905061021457610234565b61020260043560243560443560e060020a63f8b2cb4f026060908152600160a060020a03808516606452600091839185919083169063f8b2cb4f9060849060209060248189876161da5a03f115610002575050604051519190911015905061023b576101c6565b61020260043560006020819052908152604090205481565b6102026004356024356044357fb7fde9da000000000000000000000000000000000000000000000000000000006060908152600160a060020a038085166064526084849052600091839182169063b7fde9da9060a490859060448183876161da5a03f11561000257505050600160a060020a0385168252602082905260408220805460058604900390555b509392505050565b61020260043560016020526000908152604090205481565b600160a060020a03600435166000908152602081905260409020545b60408051918252519081900360200190f35b600160a060020a0384168252602082905260409091206101f49055506001815b5092915050565b80600160a060020a031663366d4a3386866040518360e060020a0281526004018083600160a060020a03168152602001828152602001925050506020604051808303816000876161da5a03f11561000257505050600160a060020a038516825260208290526040822080546005860401905550939250505056",
    address: "0xfcd6b91474a20ae72bf7fd3fcf09327991ef7a57",
    generated_with: "2.0.6",
    contract_name: "ExchangeContract"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("ExchangeContract error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("ExchangeContract error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("ExchangeContract error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("ExchangeContract error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.ExchangeContract = Contract;
  }

})();
